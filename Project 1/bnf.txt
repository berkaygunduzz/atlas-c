<program>         ::= <statement>*
<statement>       ::= "const" <identifier> "=" <expression> ";"
                   | "var" <identifier> ";"
                   | "var" <identifier> "=" <expression> ";"
                   | <identifier> "=" <expression> ";"
                   | "if" "(" <condition> ")" "{" <stmts> "}" ["else" "{" <stmts> "}"] ";"
                   | "while" "(" <condition> ")" "{" <stmts> "}" ";"
                   | "in" "();" ";"
                   | "out" "(" <output_param> ")" ";"
                   | "var" "[" <int> "]" <identifier> ";"
                   | <identifier> "[" <int> "]" "=" <int> ";"
                   | <function_definition> ";"

<expression>      ::= <term> | <term> <op> <expression>

<term>            ::= <int>
                   | <arr>
                   | <op>
                   | <func_call>
                   | <identifier>
                   | "(" <expression> ")"

<op>              ::= "+" | "-" | "*" | "/" | "mod" | "^"

<condition>       ::= <expression> <comparison_operator> <expression>

<comparison_operator> ::= "==" | "!=" | "<" | ">" | "and" | "or"

<stmts>           ::= <statement>*

<function_definition> ::= <identifier> "(" <parameters> ")" "=>" "{" <stmts> "; return" <expression> "}"

<parameters>      ::= <parameter> ("," <parameter>)*

<parameter>       ::= <int>

<int>             ::= <digit>+
<arr>             ::= "[" <int> "]"
<identifier>      ::= <letter> <identifier_tail>*
<identifier_tail> ::= <letter> | <digit> | "_"

<string>          ::= '"' <char>* '"'

<digit>           ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
<letter>          ::= "a" | "b" | "c" | ... | "z" | "A" | "B" | "C" | ... | "Z"
<char>            ::= any valid character

<output_param>    ::= <expression> | <string> | <concatenation>

<concatenation>   ::= <output_param> "," <output_param>
